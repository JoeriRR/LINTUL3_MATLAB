function [VarName1,VarName2,VarName3,VarName4,VarName5,VarName6,VarName7,VarName8,VarName9,VarName10,VarName11,VarName12,VarName13,VarName14,VarName15,VarName16,VarName17,VarName18,VarName19,VarName20,VarName21,VarName22,VarName23,VarName24,VarName25,VarName26,VarName27,VarName28,VarName29,VarName30,VarName31,VarName32,VarName33,VarName34,VarName35,VarName36,VarName37,VarName38,VarName39,VarName40,VarName41,VarName42,VarName43,VarName44,VarName45,VarName46] = importfile1(filename, startRow, endRow)
%IMPORTFILE1 Import numeric data from a text file as column vectors.
%   [VARNAME1,VARNAME2,VARNAME3,VARNAME4,VARNAME5,VARNAME6,VARNAME7,VARNAME8,VARNAME9,VARNAME10,VARNAME11,VARNAME12,VARNAME13,VARNAME14,VARNAME15,VARNAME16,VARNAME17,VARNAME18,VARNAME19,VARNAME20,VARNAME21,VARNAME22,VARNAME23,VARNAME24,VARNAME25,VARNAME26,VARNAME27,VARNAME28,VARNAME29,VARNAME30,VARNAME31,VARNAME32,VARNAME33,VARNAME34,VARNAME35,VARNAME36,VARNAME37,VARNAME38,VARNAME39,VARNAME40,VARNAME41,VARNAME42,VARNAME43,VARNAME44,VARNAME45,VARNAME46]
%   = IMPORTFILE1(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [VARNAME1,VARNAME2,VARNAME3,VARNAME4,VARNAME5,VARNAME6,VARNAME7,VARNAME8,VARNAME9,VARNAME10,VARNAME11,VARNAME12,VARNAME13,VARNAME14,VARNAME15,VARNAME16,VARNAME17,VARNAME18,VARNAME19,VARNAME20,VARNAME21,VARNAME22,VARNAME23,VARNAME24,VARNAME25,VARNAME26,VARNAME27,VARNAME28,VARNAME29,VARNAME30,VARNAME31,VARNAME32,VARNAME33,VARNAME34,VARNAME35,VARNAME36,VARNAME37,VARNAME38,VARNAME39,VARNAME40,VARNAME41,VARNAME42,VARNAME43,VARNAME44,VARNAME45,VARNAME46]
%   = IMPORTFILE1(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [VarName1,VarName2,VarName3,VarName4,VarName5,VarName6,VarName7,VarName8,VarName9,VarName10,VarName11,VarName12,VarName13,VarName14,VarName15,VarName16,VarName17,VarName18,VarName19,VarName20,VarName21,VarName22,VarName23,VarName24,VarName25,VarName26,VarName27,VarName28,VarName29,VarName30,VarName31,VarName32,VarName33,VarName34,VarName35,VarName36,VarName37,VarName38,VarName39,VarName40,VarName41,VarName42,VarName43,VarName44,VarName45,VarName46] = importfile1('res.dat',10, 249);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2018/09/10 09:40:11

%% Initialize variables.
if nargin<=2
    startRow = 10;
    endRow = 249;
end

%% Read columns of data as text:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%15s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%13s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
textscan(fileID, '%[^\n\r]', startRow(1)-1, 'WhiteSpace', '', 'ReturnOnError', false);
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    textscan(fileID, '%[^\n\r]', startRow(block)-1, 'WhiteSpace', '', 'ReturnOnError', false);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', '', 'WhiteSpace', '', 'TextType', 'string', 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric text to numbers.
% Replace non-numeric text with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = mat2cell(dataArray{col}, ones(length(dataArray{col}), 1));
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46]
    % Converts text in the input cell array to numbers. Replaced non-numeric
    % text with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1)
        % Create a regular expression to detect and remove non-numeric prefixes and
        % suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData(row), regexstr, 'names');
            numbers = result.numbers;
            
            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if numbers.contains(',')
                thousandsRegExp = '^\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(numbers, thousandsRegExp, 'once'))
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric text to numbers.
            if ~invalidThousandsSeparator
                numbers = textscan(char(strrep(numbers, ',', '')), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch
            raw{row, col} = rawData{row};
        end
    end
end


%% Split data into numeric and string columns.
rawNumericColumns = raw(:, [1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46]);
rawStringColumns = string(raw(:, 2));


%% Make sure any text containing <undefined> is properly converted to an <undefined> categorical
idx = (rawStringColumns(:, 1) == "<undefined>");
rawStringColumns(idx, 1) = "";

%% Allocate imported array to column variable names
VarName1 = cell2mat(rawNumericColumns(:, 1));
VarName2 = categorical(rawStringColumns(:, 1));
VarName3 = cell2mat(rawNumericColumns(:, 2));
VarName4 = cell2mat(rawNumericColumns(:, 3));
VarName5 = cell2mat(rawNumericColumns(:, 4));
VarName6 = cell2mat(rawNumericColumns(:, 5));
VarName7 = cell2mat(rawNumericColumns(:, 6));
VarName8 = cell2mat(rawNumericColumns(:, 7));
VarName9 = cell2mat(rawNumericColumns(:, 8));
VarName10 = cell2mat(rawNumericColumns(:, 9));
VarName11 = cell2mat(rawNumericColumns(:, 10));
VarName12 = cell2mat(rawNumericColumns(:, 11));
VarName13 = cell2mat(rawNumericColumns(:, 12));
VarName14 = cell2mat(rawNumericColumns(:, 13));
VarName15 = cell2mat(rawNumericColumns(:, 14));
VarName16 = cell2mat(rawNumericColumns(:, 15));
VarName17 = cell2mat(rawNumericColumns(:, 16));
VarName18 = cell2mat(rawNumericColumns(:, 17));
VarName19 = cell2mat(rawNumericColumns(:, 18));
VarName20 = cell2mat(rawNumericColumns(:, 19));
VarName21 = cell2mat(rawNumericColumns(:, 20));
VarName22 = cell2mat(rawNumericColumns(:, 21));
VarName23 = cell2mat(rawNumericColumns(:, 22));
VarName24 = cell2mat(rawNumericColumns(:, 23));
VarName25 = cell2mat(rawNumericColumns(:, 24));
VarName26 = cell2mat(rawNumericColumns(:, 25));
VarName27 = cell2mat(rawNumericColumns(:, 26));
VarName28 = cell2mat(rawNumericColumns(:, 27));
VarName29 = cell2mat(rawNumericColumns(:, 28));
VarName30 = cell2mat(rawNumericColumns(:, 29));
VarName31 = cell2mat(rawNumericColumns(:, 30));
VarName32 = cell2mat(rawNumericColumns(:, 31));
VarName33 = cell2mat(rawNumericColumns(:, 32));
VarName34 = cell2mat(rawNumericColumns(:, 33));
VarName35 = cell2mat(rawNumericColumns(:, 34));
VarName36 = cell2mat(rawNumericColumns(:, 35));
VarName37 = cell2mat(rawNumericColumns(:, 36));
VarName38 = cell2mat(rawNumericColumns(:, 37));
VarName39 = cell2mat(rawNumericColumns(:, 38));
VarName40 = cell2mat(rawNumericColumns(:, 39));
VarName41 = cell2mat(rawNumericColumns(:, 40));
VarName42 = cell2mat(rawNumericColumns(:, 41));
VarName43 = cell2mat(rawNumericColumns(:, 42));
VarName44 = cell2mat(rawNumericColumns(:, 43));
VarName45 = cell2mat(rawNumericColumns(:, 44));
VarName46 = cell2mat(rawNumericColumns(:, 45));


